
env:
  STACK: java
  BUILD_TECH: java_maven
  MVN_ARGS: clean install --batch-mode --update-snapshots verify
  CONTINUE_ON_ERROR: false
  CONTINUE_ON_ERROR_SETUP: true
  JOB_STATUS_CODE: 0

on:
  push:
  # and the target with some regex to match specific  branch namess
    branches:
      - master
      - 'FEATURE-[0-9]-[0-9]-[0-9]-X-BRANCH'
      - '[0-9]_[0-9]_x'
      - '[0-9]-[0-9]-X-BRANCH'
  pull_request:
    branches:
      - master
      - 'FEATURE-[0-9]-[0-9]-[0-9]-X-BRANCH'
      - '[0-9]_[0-9]_x'
      - '[0-9]-[0-9]-X-BRANCH'

jobs:
  Build:
    runs-on: ubuntu-latest 
    
    steps:
    ######## 1 Checkout code ########
      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          ref: ${{ github.REF }}
          fetch-depth: 0
          
      ########2  Setup JDK 11 ########
      - name: set up JDK 11
        id: setup_jdk
        if: ${{ env.STACK == 'java' }}
        uses: actions/setup-java@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          java-version: '11'
          distribution: 'adopt'
          
#      - name: Print Setup status
#        run: echo ${{ steps.setup_jdk.outcome }}
        
      ######## Build - Maven ########
      - name: Build with Mav
        id: build_maven
        if: ${{ env.BUILD_TECH == 'java_maven' }}
        run: mvn ${{ env.MVN_ARGS }}
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
    
      ######## Build - Ant ########
      - name: Build with Ant
        if: ${{ env.BUILD_TECH == 'java_ant' }}
        run: ant -noinput -buildfile build.xml
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
    
    
      ######## Build - Gradle ########
      - name: Validate Gradle wrapper
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        uses: gradle/wrapper-validation-action@v1
        continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}

      - name: Build with Gradle
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        run: ./gradlew build
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

      ######## JUnit Test with Maven ########
      - name: Test with Maven
        run: mvn -B test --file pom.xml
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:          
          jacoco-csv-file: target/site/jacoco/jacoco.csv
          badges-directory: .github/JaCoCo
          generate-coverage-badge: true
          coverage-badge-filename: jacoco.svg
          generate-branches-badge: false
          branches-badge-filename: branches.svg
          colors: '#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44'
          intervals: 100 90 80 70 60 0
          on-missing-report: fail
          fail-if-coverage-less-than: 0
          fail-if-branches-less-than: 0
          fail-on-coverage-decrease: false
          fail-on-branches-decrease: false
      - name: Log coverage percentage
        run: |
          ls -R
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"     
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/   

      - uses: codecov/codecov-action@v1
        with:
          file: ./**/target/site/jacoco/jacoco.xml
          name: codecov        
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: target/surefire-reports/*.xml
          
      ######## Setup .Net  ########
      - name: Setup .NET 3.x
        if: ${{ env.STACK == 'dotnet' }}
        uses: actions/setup-dotnet@v1
        continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}
        with:
          dotnet-version: '3.x'
          
      - name: Sanity Check
        run: ls -l $GITHUB_WORKSPACE

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: artifact 
          path: $GITHUB_WORKSPACE
          # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          
      ######## Sonar Cloud Scan ########
  Code-Quality-Check:
    needs: Build
  
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
 #       if: ${{ job.status == 2 }}
      - name: SonarCloud Scan
        #run: mvn -B sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=pintu-gupta-github -Dsonar.projectKey=pintu-gupta-github
        run: mvn -B sonar:sonar -Dsonar.projectKey=Java-Maven-Jacoco-Sonar -Dsonar.projectName=Java-Maven-Jacoco-Sonar -Dsonar.host.url=http://18.188.249.80:9000 -Dsonar.login=103e87043953a8c9564be3a5fbed3a26a6d084c2 -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        
     
        ######## Deployment - Dev Environment ########
  Deploy-Dev:
    environment: 'Development'
    runs-on: ubuntu-latest
    needs: Code-Quality-Check
    steps:
    - name: Deploy dev
      run: echo ${{ job.status }}
      
  Functional-Test-Regression:
    runs-on: ubuntu-latest
    needs: Deploy-Dev
    steps:
    - name: Regression
      run: echo ${{ job.status }}
      
  Functional-Test-Progression:
    runs-on: ubuntu-latest
    needs: Deploy-Dev
    steps:
    - name: Progression
      run: echo ${{ job.status }}
      
  Performance-Test:
    runs-on: ubuntu-latest
    needs: Deploy-Dev
    steps:
    - name: Peerformance-Test
      run: echo ${{ job.status }}
    
  Stage-Artifacts:
    runs-on: ubuntu-latest
    needs: [Functional-Test-Progression, Functional-Test-Regression]
    steps:
    - name: Upload Artifacts to Artifactory
      run: echo ${{ job.status }}
